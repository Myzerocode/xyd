name: ‚è≠Ô∏è CLI Release

on:
  push:
    tags:
      - 'v*.*.*' # stable e.g. v0.1.0
      - 'v*.*.*-*' # pre-release e.g. v0.1.0-alpha.1

jobs:
  cli-release:
    name: ‚è≠Ô∏è CLI Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: üîê Setup npm auth
        run: |
          echo "registry=https://registry.npmjs.org" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: üì¶ Extract version from tag
        id: version
        run: |
          # Extract version from git tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: üîç Verify version matches package.json
        run: |
          cd packages/xyd-js
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Package version: $PACKAGE_VERSION"
          echo "Tag version: ${{ steps.version.outputs.VERSION }}"
          
          if [ "$PACKAGE_VERSION" != "${{ steps.version.outputs.VERSION }}" ]; then
            echo "‚ùå Version mismatch! Package.json has $PACKAGE_VERSION but tag is ${{ steps.version.outputs.VERSION }}"
            exit 1
          fi
          echo "‚úÖ Version match confirmed"

      - name: üöÄ Publish to npm
        run: |
          cd packages/xyd-js
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

#      - name: üìù Generate release notes
#        id: release_notes
#        run: |
#          chmod +x scripts/release-notes.mjs
#          RELEASE_BODY=$(./scripts/release-notes.mjs "${{ steps.version.outputs.VERSION }}")
#          echo "RELEASE_BODY<<EOF" >> $GITHUB_OUTPUT
#          echo "$RELEASE_BODY" >> $GITHUB_OUTPUT
#          echo "EOF" >> $GITHUB_OUTPUT

      # TODO: 
      # - name: üè∑Ô∏è Create GitHub Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ steps.version.outputs.VERSION }}
      #     body: ${{ steps.release_notes.outputs.RELEASE_BODY }}
      #     draft: false
      #     prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}



