{
  "schemaVersion": "2.0",
  "id": 0,
  "name": "@xyd-js/sources",
  "variant": "project",
  "kind": 1,
  "flags": {},
  "children": [
    {
      "id": 1,
      "name": "Settings",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Main settings interface for the application"
          }
        ]
      },
      "children": [
        {
          "id": 2,
          "name": "theme",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Theme configuration for the application"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 10,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 10,
            "name": "Theme",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 3,
          "name": "navigation",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Navigation configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 13,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 37,
            "name": "Navigation",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 4,
          "name": "api",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "API configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 16,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 74,
            "name": "API",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 5,
          "name": "integrations",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Integrations configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 19,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 102,
            "name": "Integrations",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 6,
          "name": "plugins",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Plugins configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 22,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 119,
            "name": "Plugins",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 7,
          "name": "redirects",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unsafe",
                "content": [
                  {
                    "kind": "text",
                    "text": "Redirects configuration"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 29,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "target": 123,
              "name": "Redirects",
              "package": "@xyd-js/sources"
            }
          }
        },
        {
          "id": 8,
          "name": "seo",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unsafe",
                "content": [
                  {
                    "kind": "text",
                    "text": "SEO configuration"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 35,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 126,
            "name": "SEO",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 9,
          "name": "engine",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Engine configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 38,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 132,
            "name": "Engine",
            "package": "@xyd-js/sources"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 8,
          "character": 17
        }
      ]
    },
    {
      "id": 10,
      "name": "Theme",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Theme configuration that changes the look and feel of the project"
          }
        ]
      },
      "children": [
        {
          "id": 11,
          "name": "name",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isReadonly": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A preset theme configuration that changes the look and feel of the project. \nA theme is a set of default styling configurations. \n\nExample built-in themes: "
              },
              {
                "kind": "code",
                "text": "`cosmo`"
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "code",
                "text": "`gusto`"
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "code",
                "text": "`poetry`"
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "code",
                "text": "`picasso`"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 53,
              "character": 13
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": 35,
                "name": "ThemePresetName",
                "package": "@xyd-js/sources"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 12,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {}
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 13,
          "name": "markdown",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Markdown configuration for the theme, including options like syntax highlighting"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 56,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 20,
            "name": "Markdown",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 14,
          "name": "logo",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Path to logo image or object with path to \"light\" and \"dark\" mode logo images, and where the logo links to. \nSVG format is recommended as it does not pixelate and the file size is generally smaller."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 62,
              "character": 4
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "reference",
                "target": 22,
                "name": "Logo",
                "package": "@xyd-js/sources"
              },
              {
                "type": "reference",
                "target": {
                  "packageName": "@types/react",
                  "packagePath": "index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            ]
          }
        },
        {
          "id": 15,
          "name": "banner",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Banner configuration for the theme."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 67,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 26,
            "name": "Banner",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 16,
          "name": "favicon",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Path to the favicon image. For example: /path/to/favicon.svg"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 70,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 17,
          "name": "maxTocDepth",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The defult level of the table of contents."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 73,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 18,
          "name": "head",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Head configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 76,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "tuple",
              "elements": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "target": {
                    "packageName": "typescript",
                    "packagePath": "lib/lib.es5.d.ts",
                    "qualifiedName": "Record"
                  },
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ]
                    }
                  ],
                  "name": "Record",
                  "package": "typescript"
                }
              ]
            }
          }
        },
        {
          "id": 19,
          "name": "icons",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The iconify library"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 79,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 33,
            "name": "Icons",
            "package": "@xyd-js/sources"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            11,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 46,
          "character": 17
        }
      ]
    },
    {
      "id": 20,
      "name": "Markdown",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Markdown configuration interface"
          }
        ]
      },
      "children": [
        {
          "id": 21,
          "name": "syntaxHighlight",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Syntax highlighting configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 97,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "packageName": "@code-hike/lighter",
              "packagePath": "dist/index.d.ts",
              "qualifiedName": "Theme"
            },
            "name": "Theme",
            "package": "@code-hike/lighter"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            21
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 95,
          "character": 17
        }
      ]
    },
    {
      "id": 22,
      "name": "Logo",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Logo configuration interface"
          }
        ]
      },
      "children": [
        {
          "id": 23,
          "name": "light",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Path to the logo in light mode. For example: "
              },
              {
                "kind": "code",
                "text": "`/path/to/logo.svg`"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 105,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 24,
          "name": "dark",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Path to the logo in dark mode. For example: "
              },
              {
                "kind": "code",
                "text": "`/path/to/logo.svg`"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 108,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 25,
          "name": "href",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Where clicking on the logo links you to"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 111,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            23,
            24,
            25
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 103,
          "character": 17
        }
      ]
    },
    {
      "id": 26,
      "name": "Banner",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Banner configuration interface"
          }
        ]
      },
      "children": [
        {
          "id": 27,
          "name": "content",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Banner content."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 121,
              "character": 4
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "reference",
                "target": {
                  "packageName": "@types/react",
                  "packagePath": "index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            27
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 117,
          "character": 17
        }
      ]
    },
    {
      "id": 28,
      "name": "IconLibrary",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "children": [
        {
          "id": 29,
          "name": "name",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The iconify library name"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 126,
              "character": 5
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 30,
          "name": "version",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The iconify library version"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 129,
              "character": 5
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 31,
          "name": "default",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The default iconify icon name"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 132,
              "character": 5
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 32,
          "name": "noprefix",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Merge icons from the library into the default iconify library"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 135,
              "character": 5
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            29,
            30,
            31,
            32
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 124,
          "character": 17
        }
      ]
    },
    {
      "id": 33,
      "name": "Icons",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "children": [
        {
          "id": 34,
          "name": "library",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The iconify library"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 140,
              "character": 4
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "reference",
                "target": 28,
                "name": "IconLibrary",
                "package": "@xyd-js/sources"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 28,
                  "name": "IconLibrary",
                  "package": "@xyd-js/sources"
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            34
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 138,
          "character": 17
        }
      ]
    },
    {
      "id": 35,
      "name": "ThemePresetName",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Available theme preset names"
          }
        ]
      },
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 144,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "poetry"
          },
          {
            "type": "literal",
            "value": "cosmo"
          },
          {
            "type": "literal",
            "value": "opener"
          }
        ]
      }
    },
    {
      "id": 36,
      "name": "SearchType",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Search bar location options"
          }
        ]
      },
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 147,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "side"
          },
          {
            "type": "literal",
            "value": "top"
          }
        ]
      }
    },
    {
      "id": 37,
      "name": "Navigation",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Navigation configuration interface"
          }
        ]
      },
      "children": [
        {
          "id": 38,
          "name": "sidebar",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Definition of sidebar - an array of groups with all the pages within that group"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 158,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "target": 42,
                  "name": "SidebarRoute",
                  "package": "@xyd-js/sources"
                },
                {
                  "type": "reference",
                  "target": 45,
                  "name": "Sidebar",
                  "package": "@xyd-js/sources"
                }
              ]
            }
          }
        },
        {
          "id": 39,
          "name": "header",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Array of headers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 161,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "target": 63,
              "name": "Header",
              "package": "@xyd-js/sources"
            }
          }
        },
        {
          "id": 40,
          "name": "subheader",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Array of sub headers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 164,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "target": 59,
              "name": "SubHeader",
              "package": "@xyd-js/sources"
            }
          }
        },
        {
          "id": 41,
          "name": "anchors",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Anchors, includes the icon, name, and url"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 173,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 72,
            "name": "AnchorRoot",
            "package": "@xyd-js/sources"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            38,
            39,
            40,
            41
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 156,
          "character": 17
        }
      ]
    },
    {
      "id": 42,
      "name": "SidebarRoute",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sidebar multi-group configuration"
          }
        ]
      },
      "children": [
        {
          "id": 43,
          "name": "route",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Route for this sidebar group"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 181,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 44,
          "name": "items",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sidebar items within this group"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 184,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "target": 45,
              "name": "Sidebar",
              "package": "@xyd-js/sources"
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            43,
            44
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 179,
          "character": 17
        }
      ]
    },
    {
      "id": 45,
      "name": "Sidebar",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sidebar configuration"
          }
        ]
      },
      "children": [
        {
          "id": 46,
          "name": "group",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The name of the group"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 192,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 47,
          "name": "pages",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The relative paths to the markdown files that will serve as pages.\nNote: groups are recursive, so to add a sub-folder add another group object in the page array."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 198,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "target": 53,
              "name": "PageURL",
              "package": "@xyd-js/sources"
            }
          }
        },
        {
          "id": 48,
          "name": "icon",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The icon of the group."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 203,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 49,
          "name": "sort",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The sort order of the group."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 208,
              "character": 4
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 50,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 51,
                      "name": "before",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "settings.ts",
                          "line": 209,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 52,
                      "name": "after",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "settings.ts",
                          "line": 211,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [
                        51,
                        52
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 208,
                      "character": 20
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            46,
            47,
            48,
            49
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 190,
          "character": 17
        }
      ]
    },
    {
      "id": 53,
      "name": "PageURL",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Page URL type"
          }
        ]
      },
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 218,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "reference",
            "target": 54,
            "name": "VirtualPage",
            "package": "@xyd-js/sources"
          },
          {
            "type": "reference",
            "target": 45,
            "name": "Sidebar",
            "package": "@xyd-js/sources"
          }
        ]
      }
    },
    {
      "id": 54,
      "name": "VirtualPage",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Virtual page type\n\nVirtual pages are composition of pages, needed for templating e.g in uniform\n\nExample:\n\n{\n pages: [0\n   \".xyd/.cache/.content/docs/rest/todo:docs/rest/todo\",\n ]\n}\n\nabove will be rendered as docs/rest/todo.md using composition from xyd's "
          },
          {
            "kind": "code",
            "text": "`.content`"
          }
        ],
        "modifierTags": [
          "@internal"
        ]
      },
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 237,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 55,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 56,
                  "name": "virtual",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The virtual page to use for the page"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 239,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 57,
                  "name": "page",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The page to use for the page"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 242,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 58,
                  "name": "templates",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The template to use for the page"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 245,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    56,
                    57,
                    58
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "settings.ts",
                  "line": 237,
                  "character": 35
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 59,
      "name": "SubHeader",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sub-header configuration"
          }
        ]
      },
      "children": [
        {
          "id": 60,
          "name": "route",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Route for this sub-header"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 254,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 61,
          "name": "name",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Name of this sub-header"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 257,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 62,
          "name": "items",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Items within this sub-header"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 260,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "target": 63,
              "name": "Header",
              "package": "@xyd-js/sources"
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            60,
            61,
            62
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 252,
          "character": 17
        }
      ]
    },
    {
      "id": 63,
      "name": "Header",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Header configuration"
          }
        ]
      },
      "children": [
        {
          "id": 65,
          "name": "name",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The name of the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 268,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 66,
          "name": "url",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The url once you click on the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 271,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 67,
          "name": "float",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Float the header to the right"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 274,
              "character": 4
            }
          ],
          "type": {
            "type": "literal",
            "value": "right"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            65,
            66,
            67
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 266,
          "character": 12
        }
      ]
    },
    {
      "id": 68,
      "name": "Anchor",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Anchor configuration"
          }
        ]
      },
      "children": [
        {
          "id": 69,
          "name": "icon",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The iconify icon name"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 282,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 70,
          "name": "name",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The name of the anchor label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 285,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 71,
          "name": "url",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The start of the URL that marks what pages go in the anchor. \nGenerally, this is the name of the folder you put your pages in."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 291,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            69,
            70,
            71
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 280,
          "character": 17
        }
      ]
    },
    {
      "id": 72,
      "name": "AnchorRoot",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Anchor root configuration"
          }
        ]
      },
      "children": [
        {
          "id": 73,
          "name": "bottom",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Bottom anchors"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 299,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "target": 68,
              "name": "Anchor",
              "package": "@xyd-js/sources"
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            73
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 297,
          "character": 17
        }
      ]
    },
    {
      "id": 74,
      "name": "API",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "API configuration interface"
          }
        ]
      },
      "children": [
        {
          "id": 75,
          "name": "openapi",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "OpenAPI configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 313,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 78,
            "name": "APIFile",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 76,
          "name": "graphql",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "GraphQL configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 318,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 78,
            "name": "APIFile",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 77,
          "name": "sources",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sources configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 323,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 78,
            "name": "APIFile",
            "package": "@xyd-js/sources"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            75,
            76,
            77
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 309,
          "character": 17
        }
      ]
    },
    {
      "id": 78,
      "name": "APIFile",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "API file configuration. Can be a path, an array of paths, a map of paths, or an advanced configuration"
          }
        ]
      },
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 329,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "type": "reference",
            "target": 83,
            "name": "APIFileAdvanced",
            "package": "@xyd-js/sources"
          },
          {
            "type": "reference",
            "target": 79,
            "name": "APIFileMap",
            "package": "@xyd-js/sources"
          }
        ]
      }
    },
    {
      "id": 79,
      "name": "APIFileMap",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "API file map type"
          }
        ]
      },
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 334,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 80,
          "name": "__type",
          "variant": "declaration",
          "kind": 65536,
          "flags": {},
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 334,
              "character": 25
            }
          ],
          "indexSignatures": [
            {
              "id": 81,
              "name": "__index",
              "variant": "signature",
              "kind": 8192,
              "flags": {},
              "sources": [
                {
                  "fileName": "settings.ts",
                  "line": 335,
                  "character": 4
                }
              ],
              "parameters": [
                {
                  "id": 82,
                  "name": "name",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      }
    },
    {
      "id": 83,
      "name": "APIFileAdvanced",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "API file advanced type"
          }
        ]
      },
      "children": [
        {
          "id": 85,
          "name": "info",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "API information configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 343,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 87,
            "name": "APIInfo",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 86,
          "name": "route",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Route configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 346,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            85,
            86
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 341,
          "character": 12
        }
      ]
    },
    {
      "id": 87,
      "name": "APIInfo",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "API information configuration"
          }
        ]
      },
      "children": [
        {
          "id": 88,
          "name": "baseUrl",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The base url for all API endpoints. If baseUrl is an array, it will enable \nfor multiple base url options that the user can toggle."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 361,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 89,
          "name": "auth",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Authentication information"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 364,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 94,
            "name": "APIAuth",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 90,
          "name": "name",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The name of the authentication parameter used in the API playground.\nIf method is basic, the format should be [usernameName]:[passwordName]"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 370,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 91,
          "name": "inputPrefix",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The default value that's designed to be a prefisx for the authentication input field.\nE.g. If an inputPrefix of AuthKey would inherit the default input result of the authentication field as AuthKey."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 376,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 92,
          "name": "playground",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Configurations for the API playground"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 379,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 96,
            "name": "APIPlayground",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 93,
          "name": "request",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Request configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 382,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 98,
            "name": "APIInfoRequest",
            "package": "@xyd-js/sources"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            88,
            89,
            90,
            91,
            92,
            93
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 356,
          "character": 17
        }
      ]
    },
    {
      "id": 94,
      "name": "APIAuth",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "API authentication configuration"
          }
        ]
      },
      "children": [
        {
          "id": 95,
          "name": "method",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The authentication strategy used for all API endpoints"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 390,
              "character": 4
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "bearer"
              },
              {
                "type": "literal",
                "value": "basic"
              },
              {
                "type": "literal",
                "value": "key"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            95
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 388,
          "character": 17
        }
      ]
    },
    {
      "id": 96,
      "name": "APIPlayground",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "API playground configuration"
          }
        ]
      },
      "children": [
        {
          "id": 97,
          "name": "mode",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Playground display mode"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 398,
              "character": 4
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "show"
              },
              {
                "type": "literal",
                "value": "simple"
              },
              {
                "type": "literal",
                "value": "hide"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            97
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 396,
          "character": 17
        }
      ]
    },
    {
      "id": 98,
      "name": "APIInfoRequest",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "API request configuration"
          }
        ]
      },
      "children": [
        {
          "id": 99,
          "name": "example",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Configurations for the auto-generated API request examples"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 406,
              "character": 4
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 100,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 101,
                  "name": "languages",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "An array of strings that determine the order of the languages of the auto-generated request examples.\nYou can either define custom languages utilizing x-codeSamples or use our default languages which include \nbash, python, javascript, php, go, java"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 412,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    101
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "settings.ts",
                  "line": 406,
                  "character": 14
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            99
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 404,
          "character": 17
        }
      ]
    },
    {
      "id": 102,
      "name": "Integrations",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Integrations configuration"
          }
        ]
      },
      "children": [
        {
          "id": 103,
          "name": "analytics",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Configurations to add third-party analytics integrations. \nSee full list of supported analytics here."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 428,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 105,
            "name": "IntegrationAnalytics",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 104,
          "name": "search",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Configurations to add third-party search integrations. \nSee full list of supported search here."
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 434,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 109,
            "name": "IntegrationSearch",
            "package": "@xyd-js/sources"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            103,
            104
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 423,
          "character": 17
        }
      ]
    },
    {
      "id": 105,
      "name": "IntegrationAnalytics",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Analytics configuration"
          }
        ]
      },
      "children": [
        {
          "id": 106,
          "name": "livesession",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Livesession analytics configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 443,
              "character": 4
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 107,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 108,
                  "name": "trackId",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Livesession's TrackID"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 445,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    108
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "settings.ts",
                  "line": 443,
                  "character": 18
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            106
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 441,
          "character": 17
        }
      ]
    },
    {
      "id": 109,
      "name": "IntegrationSearch",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Search configuration"
          }
        ]
      },
      "children": [
        {
          "id": 110,
          "name": "algolia",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Algolia search configuration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 455,
              "character": 4
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 111,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 112,
                  "name": "appId",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Algolia application ID"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 457,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 113,
                  "name": "apiKey",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Algolia API key"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 460,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    112,
                    113
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "settings.ts",
                  "line": 455,
                  "character": 14
                }
              ]
            }
          }
        },
        {
          "id": 114,
          "name": "orama",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 463,
              "character": 4
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 115,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 116,
                      "name": "endpoint",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Orama endpoint"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "settings.ts",
                          "line": 465,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 117,
                      "name": "apiKey",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Orama API key"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "settings.ts",
                          "line": 468,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 118,
                      "name": "suggestions",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Orama suggestions"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "settings.ts",
                          "line": 471,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [
                        116,
                        117,
                        118
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 463,
                      "character": 12
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            110,
            114
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 453,
          "character": 17
        }
      ]
    },
    {
      "id": 119,
      "name": "Plugins",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Plugin configuration"
          }
        ],
        "blockTags": [
          {
            "tag": "@example",
            "content": [
              {
                "kind": "code",
                "text": "```ts\n1)\n{\n plugins: [\n   \"livesession\",\n ]\n}\n\nor 2)\n{\n plugins: [\n   [\n     \"livesession\",\n     \"accountID.websiteID\",\n     {\n         keystrokes: true \n     }\n   ]\n ]\n}\n\nyou can also use the type to define the plugin config in your code:\n\nconst livesessionPlugin: PluginConfig<\"livesession\", [string, { keystrokes: boolean }]> = [\n   \"livesession\",\n   \"accountID.websiteID\",\n   {\n       keystrokes: true \n   }\n]\n```"
              }
            ]
          }
        ]
      },
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 513,
          "character": 12
        }
      ],
      "type": {
        "type": "array",
        "elementType": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "reference",
              "target": 120,
              "name": "PluginConfig",
              "package": "@xyd-js/sources"
            }
          ]
        }
      }
    },
    {
      "id": 120,
      "name": "PluginConfig",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 515,
          "character": 12
        }
      ],
      "typeParameters": [
        {
          "id": 121,
          "name": "PluginName",
          "variant": "typeParam",
          "kind": 131072,
          "flags": {},
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "default": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 122,
          "name": "PluginArgs",
          "variant": "typeParam",
          "kind": 131072,
          "flags": {},
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          "default": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        }
      ],
      "type": {
        "type": "tuple",
        "elements": [
          {
            "type": "reference",
            "target": 121,
            "name": "PluginName",
            "package": "@xyd-js/sources",
            "refersToTypeParameter": true
          },
          {
            "type": "rest",
            "elementType": {
              "type": "reference",
              "target": 122,
              "name": "PluginArgs",
              "package": "@xyd-js/sources",
              "refersToTypeParameter": true
            }
          }
        ]
      }
    },
    {
      "id": 123,
      "name": "Redirects",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Redirects configuration"
          }
        ]
      },
      "children": [
        {
          "id": 124,
          "name": "source",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Source path to redirect from"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 532,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 125,
          "name": "destination",
          "variant": "declaration",
          "kind": 1024,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Destination path to redirect to"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 535,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            124,
            125
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 530,
          "character": 17
        }
      ]
    },
    {
      "id": 126,
      "name": "SEO",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "SEO configuration"
          }
        ]
      },
      "children": [
        {
          "id": 127,
          "name": "domain",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Domain name"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 545,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 128,
          "name": "metatags",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Meta tags"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 550,
              "character": 4
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 129,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "settings.ts",
                  "line": 550,
                  "character": 15
                }
              ],
              "indexSignatures": [
                {
                  "id": 130,
                  "name": "__index",
                  "variant": "signature",
                  "kind": 8192,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "settings.ts",
                      "line": 550,
                      "character": 16
                    }
                  ],
                  "parameters": [
                    {
                      "id": 131,
                      "name": "tag",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            127,
            128
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 541,
          "character": 17
        }
      ]
    },
    {
      "id": 132,
      "name": "Engine",
      "variant": "declaration",
      "kind": 256,
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Config configuration"
          }
        ]
      },
      "children": [
        {
          "id": 133,
          "name": "paths",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Path aliases for imports. Avoid long relative paths by creating shortcuts."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```json\n{\n  \"paths\": {\n    \"@my-package/*\": [\"../my-package/src/*\"],\n    \"@livesession-go/*\": [\"https://github.com/livesession/livesession-go/*\"]\n  }\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nUsage:\n"
                  },
                  {
                    "kind": "code",
                    "text": "```typescript\n// Instead of\n@importCode(\"../../../my-package/src/components/Badge.tsx\")\n\n// Use\n@importCode(\"@my-package/src/components/Badge.tsx\")\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 582,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 135,
            "name": "EnginePaths",
            "package": "@xyd-js/sources"
          }
        },
        {
          "id": 134,
          "name": "uniform",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unsafe",
                "content": [
                  {
                    "kind": "text",
                    "text": "Uniform configuration"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 590,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "target": 139,
            "name": "EngineUniform",
            "package": "@xyd-js/sources"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            133,
            134
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 559,
          "character": 17
        }
      ]
    },
    {
      "id": 135,
      "name": "EnginePaths",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 593,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 136,
          "name": "__type",
          "variant": "declaration",
          "kind": 65536,
          "flags": {},
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 593,
              "character": 26
            }
          ],
          "indexSignatures": [
            {
              "id": 137,
              "name": "__index",
              "variant": "signature",
              "kind": 8192,
              "flags": {},
              "sources": [
                {
                  "fileName": "settings.ts",
                  "line": 593,
                  "character": 28
                }
              ],
              "parameters": [
                {
                  "id": 138,
                  "name": "key",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            }
          ]
        }
      }
    },
    {
      "id": 139,
      "name": "EngineUniform",
      "variant": "declaration",
      "kind": 2097152,
      "flags": {},
      "children": [
        {
          "id": 141,
          "name": "store",
          "variant": "declaration",
          "kind": 1024,
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If "
              },
              {
                "kind": "code",
                "text": "`true`"
              },
              {
                "kind": "text",
                "text": " then virtual pages will not created and generated content will be stored on disk"
              }
            ]
          },
          "sources": [
            {
              "fileName": "settings.ts",
              "line": 599,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            141
          ]
        }
      ],
      "sources": [
        {
          "fileName": "settings.ts",
          "line": 595,
          "character": 12
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Interfaces",
      "children": [
        1,
        10,
        20,
        22,
        26,
        28,
        33,
        37,
        42,
        45,
        59,
        68,
        72,
        74,
        87,
        94,
        96,
        98,
        102,
        105,
        109,
        123,
        126,
        132
      ]
    },
    {
      "title": "Type Aliases",
      "children": [
        35,
        36,
        53,
        54,
        63,
        78,
        79,
        83,
        119,
        120,
        135,
        139
      ]
    }
  ],
  "packageName": "@xyd-js/sources",
  "symbolIdMap": {
    "0": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": ""
    },
    "1": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings"
    },
    "2": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings.theme"
    },
    "3": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings.navigation"
    },
    "4": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings.api"
    },
    "5": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings.integrations"
    },
    "6": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings.plugins"
    },
    "7": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings.redirects"
    },
    "8": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings.seo"
    },
    "9": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Settings.engine"
    },
    "10": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme"
    },
    "11": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme.name"
    },
    "12": {
      "packageName": "@xyd-js/sources",
      "packagePath": "",
      "qualifiedName": "__type"
    },
    "13": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme.markdown"
    },
    "14": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme.logo"
    },
    "15": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme.banner"
    },
    "16": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme.favicon"
    },
    "17": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme.maxTocDepth"
    },
    "18": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme.head"
    },
    "19": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Theme.icons"
    },
    "20": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Markdown"
    },
    "21": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Markdown.syntaxHighlight"
    },
    "22": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Logo"
    },
    "23": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Logo.light"
    },
    "24": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Logo.dark"
    },
    "25": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Logo.href"
    },
    "26": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Banner"
    },
    "27": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Banner.content"
    },
    "28": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IconLibrary"
    },
    "29": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IconLibrary.name"
    },
    "30": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IconLibrary.version"
    },
    "31": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IconLibrary.default"
    },
    "32": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IconLibrary.noprefix"
    },
    "33": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Icons"
    },
    "34": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Icons.library"
    },
    "35": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "ThemePresetName"
    },
    "36": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SearchType"
    },
    "37": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Navigation"
    },
    "38": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Navigation.sidebar"
    },
    "39": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Navigation.header"
    },
    "40": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Navigation.subheader"
    },
    "41": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Navigation.anchors"
    },
    "42": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SidebarRoute"
    },
    "43": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SidebarRoute.route"
    },
    "44": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SidebarRoute.items"
    },
    "45": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Sidebar"
    },
    "46": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Sidebar.group"
    },
    "47": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Sidebar.pages"
    },
    "48": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Sidebar.icon"
    },
    "49": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Sidebar.sort"
    },
    "50": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "51": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.before"
    },
    "52": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.after"
    },
    "53": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "PageURL"
    },
    "54": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "VirtualPage"
    },
    "55": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "56": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.virtual"
    },
    "57": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.page"
    },
    "58": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.templates"
    },
    "59": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SubHeader"
    },
    "60": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SubHeader.route"
    },
    "61": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SubHeader.name"
    },
    "62": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SubHeader.items"
    },
    "63": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Header"
    },
    "65": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.name"
    },
    "66": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.url"
    },
    "67": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.float"
    },
    "68": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Anchor"
    },
    "69": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Anchor.icon"
    },
    "70": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Anchor.name"
    },
    "71": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Anchor.url"
    },
    "72": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "AnchorRoot"
    },
    "73": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "AnchorRoot.bottom"
    },
    "74": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "API"
    },
    "75": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "API.openapi"
    },
    "76": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "API.graphql"
    },
    "77": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "API.sources"
    },
    "78": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIFile"
    },
    "79": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIFileMap"
    },
    "80": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "81": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.__index"
    },
    "83": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIFileAdvanced"
    },
    "85": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.info"
    },
    "86": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.route"
    },
    "87": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfo"
    },
    "88": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfo.baseUrl"
    },
    "89": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfo.auth"
    },
    "90": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfo.name"
    },
    "91": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfo.inputPrefix"
    },
    "92": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfo.playground"
    },
    "93": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfo.request"
    },
    "94": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIAuth"
    },
    "95": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIAuth.method"
    },
    "96": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIPlayground"
    },
    "97": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIPlayground.mode"
    },
    "98": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfoRequest"
    },
    "99": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "APIInfoRequest.example"
    },
    "100": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "101": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.languages"
    },
    "102": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Integrations"
    },
    "103": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Integrations.analytics"
    },
    "104": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Integrations.search"
    },
    "105": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IntegrationAnalytics"
    },
    "106": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IntegrationAnalytics.livesession"
    },
    "107": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "108": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.trackId"
    },
    "109": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IntegrationSearch"
    },
    "110": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IntegrationSearch.algolia"
    },
    "111": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "112": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.appId"
    },
    "113": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.apiKey"
    },
    "114": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "IntegrationSearch.orama"
    },
    "115": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "116": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.endpoint"
    },
    "117": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.apiKey"
    },
    "118": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.suggestions"
    },
    "119": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Plugins"
    },
    "120": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "PluginConfig"
    },
    "121": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "PluginName"
    },
    "122": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "PluginArgs"
    },
    "123": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Redirects"
    },
    "124": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Redirects.source"
    },
    "125": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Redirects.destination"
    },
    "126": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SEO"
    },
    "127": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SEO.domain"
    },
    "128": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "SEO.metatags"
    },
    "129": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "130": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.__index"
    },
    "132": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Engine"
    },
    "133": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Engine.paths"
    },
    "134": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "Engine.uniform"
    },
    "135": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "EnginePaths"
    },
    "136": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type"
    },
    "137": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.__index"
    },
    "139": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "EngineUniform"
    },
    "141": {
      "packageName": "@xyd-js/sources",
      "packagePath": "src/settings.ts",
      "qualifiedName": "__type.store"
    }
  },
  "files": {
    "entries": {
      "1": "src/settings.ts"
    },
    "reflections": {
      "1": 0
    }
  }
}