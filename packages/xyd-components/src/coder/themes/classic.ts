export default {
    name: "classic",
    "type": "from-css",
    colors: {
        "list.focusForeground": "var(--syntax1)",
        "scrollbar.shadow": "var(--syntax2)",
        "tab.activeBorder": "var(--syntax1)",
        "widget.shadow": "var(--syntax2)",
        "activityBar.border": "var(--syntax3)",
        "editorGroup.border": "var(--syntax3)",
        "editorGroupHeader.tabsBorder": "var(--syntax3)",
        "editorWidget.border": "var(--syntax3)",
        "editorWidget.resizeBorder": "var(--syntax3)",
        "input.border": "var(--syntax3)",
        "notificationCenter.border": "var(--syntax3)",
        "notifications.border": "var(--syntax3)",
        "panel.border": "var(--syntax3)",
        "sideBar.border": "var(--syntax3)",
        "statusBar.border": "var(--syntax3)",
        "tab.border": "var(--syntax3)",
        "activityBar.background": "var(--syntax4)",
        "statusBar.background": "var(--syntax4)",
        "statusBar.noFolderBackground": "var(--syntax4)",
        "statusBar.debuggingBackground": "var(--syntax4)",
        "editorGroupHeader.tabsBackground": "var(--syntax5)",
        "editorWidget.background": "var(--syntax5)",
        "sideBar.background": "var(--syntax5)",
        "sideBarSectionHeader.background": "var(--syntax5)",
        "tab.inactiveBackground": "var(--syntax5)",
        "activityBarBadge.background": "var(--syntax6)",
        "activityBar.foreground": "var(--syntax6)",
        "statusBar.foreground": "var(--syntax7)",
        "input.placeholderForeground": "var(--syntax8)",
        "editorLineNumber.foreground": "var(--syntax9)",
        "editorLineNumber.activeForeground": "var(--syntax6)",
        foreground: "var(--syntax6)",
        "panelTitle.activeForeground": "var(--syntax6)",
        "sideBarTitle.foreground": "var(--syntax6)",
        "sideBarSectionHeader.foreground": "var(--syntax6)",
        "panelTitle.inactiveForeground": "var(--syntax10)",
        "tab.inactiveForeground": "var(--syntax10)",
        "list.highlightForeground": "var(--syntax10)",
        "editor.lineHighlightBackground": "var(--syntax11)",
        focusBorder: "var(--syntax12)",
        "button.background": "var(--syntax13)",
        "list.activeSelectionBackground": "var(--syntax13)",
        "list.focusBackground": "var(--syntax13)",
        "selection.background": "#B3D7FF",
        "list.inactiveSelectionBackground": "var(--syntax14)",
        "terminal.ansiBlack": "var(--syntax15)",
        "terminal.ansiBrightBlack": "var(--syntax15)",
        "terminal.ansiRed": "var(--syntax16)",
        "terminal.ansiBrightRed": "var(--syntax16)",
        "terminal.ansiGreen": "var(--syntax17)",
        "terminal.ansiBrightGreen": "var(--syntax17)",
        "terminal.ansiYellow": "var(--syntax18)",
        "terminal.ansiBrightYellow": "var(--syntax18)",
        "terminal.ansiBlue": "var(--syntax19)",
        "terminal.ansiBrightBlue": "var(--syntax19)",
        "terminal.ansiMagenta": "var(--syntax20)",
        "terminal.ansiBrightMagenta": "var(--syntax20)",
        "terminal.ansiCyan": "var(--syntax21)",
        "terminal.ansiBrightCyan": "var(--syntax21)",
    },
    tokenColors: [
        {
            scope: "new.expr entity.name",
            settings: {
                foreground: "var(--syntax15)",
            },
        },
        {
            name: "Comments",
            scope: ["comment", "comment storage.type"],
            settings: {
                foreground: "var(--syntax23)",
                fontStyle: "italic",
            },
        },
        {
            name: "CSS",
            scope: [
                "entity.other.attribute-name.pseudo-class.css",
                "entity.other.attribute-name.pseudo-class.scss",
                "entity.other.attribute-name.pseudo-element.css",
                "entity.other.attribute-name.pseudo-element.scss",
                "support.function.calc.css",
                "support.function.calc.scss",
                "support.type.property-name.css",
                "support.type.property-name.scss",
                "support.type.vendored.property-name.css",
                "support.type.vendored.property-name.scss",
                "meta.property-value.css support.constant",
                "meta.property-value.scss support.constant",
                "meta.property-value.css support.constant.property-value",
                "meta.property-value.scss support.constant.property-value",
                "support.function.transform.css",
                "support.function.transform.scss",
            ],
            settings: {
                foreground: "var(--syntax20)",
            },
        },
        {
            name: "Decorator",
            scope: [
                "meta.decorator",
                "meta.decorator punctuation.decorator",
                "meta.decorator variable.other.readwrite",
                "meta.decorator meta.function-call entity.name.function",
            ],
            settings: {
                foreground: "var(--syntax18)",
            },
        },
        {
            name: "Doctype",
            scope: ["meta.tag.sgml.html"],
            settings: {
                foreground: "var(--syntax9)",
            },
        },
        {
            name: "Functions",
            scope: ["entity.name.function", "support.function"],
            settings: {
                foreground: "var(--syntax15)",
            },
        },
        {
            name: "Keys (general)",
            scope: [
                "meta.property-list meta.property-name",
                "support.type.property-name",
                "support.type.map.key",
                "entity.name.tag.yaml",
            ],
            settings: {
                foreground: "var(--syntax15)",
            },
        },
        // NEW: Explicit rule for object literal & JSON keys â€“ will render red (syntax16)
        {
            name: "Object Keys",
            scope: [
                "meta.object-literal.key",
                "meta.object-literal.key string.quoted.double",
                "meta.object-literal.key string.quoted.single",
                "meta.object-literal.key punctuation.definition.string.begin",
                "meta.object-literal.key punctuation.definition.string.end",
                "support.type.property-name.json",
            ],
            settings: {
                foreground: "var(--syntax16)",
            },
        },
        {
            name: "Keywords",
            scope: [
                "keyword.control",
                "keyword.declaration",
                "keyword.expressions-and-types",
                "keyword.operator.new",
                "keyword.reserved",
                "keyword.statement",
                "storage.type",
                "storage.modifier",
                "constant.language",
                "variable.language.super",
                "variable.language.this",
                "text.html entity.name.tag",
                "meta.tag entity.name.tag",
                "meta.tag support.class",
                "string.regexp keyword.other",
            ],
            settings: {
                foreground: "var(--syntax25)",
                fontStyle: "bold",
            },
        },
        {
            name: "Operators",
            scope: [
                "storage.type.function.arrow",
                "meta.template.expression punctuation",
                "punctuation.separator.key-value",
                "meta.object-literal.key meta.brace.square",
                "meta.template.expression keyword.operator",
                "keyword.operator.or.regexp",
                "keyword.operator.quantifier",
                "punctuation.definition.group.regexp",
                "punctuation.definition.character-class",
            ],
            settings: {
                foreground: "var(--syntax15)",
            },
        },
        {
            scope: [
                "meta.tag entity.other.attribute-name",
                "constant.character.escape.backslash",
            ],
            settings: {
                foreground: "var(--syntax26)",
            },
        },
        {
            name: "Numbers",
            scope: ["constant.numeric", "keyword.other.unit", "constant.other.color"],
            settings: {
                foreground: "var(--syntax19)",
            },
        },
        {
            name: "Strings",
            scope: [
                "string",
                "variable.parameter.url.scss",
                "markup.heading.markdown",
                "beginning.punctuation.definition.list.markdown",
                "meta.template.expression meta.embedded punctuation.definition.string.begin",
                "meta.template.expression meta.embedded punctuation.definition.string.end",
            ],
            settings: {
                foreground: "var(--syntax27)",
            },
        },
        {
            name: "Types",
            scope: [
                "meta.type",
                "meta.return.type",
                "entity.name.type",
                "support.type.primitive",
            ],
            settings: {
                foreground: "var(--syntax15)",
            },
        },
        {
            name: "Variables",
            scope: [
                "meta.objectliteral variable.other.object",
                "entity.name.type.module",
                "entity.other.inherited-class",
                "variable.scss",
                "variable.other.bracket.shell",
                "entity.name.function.scss",
            ],
            settings: {
                foreground: "var(--syntax21)",
            },
        },
        {
            name: "Keywords",
            scope: [
                "keyword.control.at-rule",
                "meta.import variable.other.readwrite",
                "meta.definition.variable variable.other.readwrite",
                "meta.definition.variable variable.other.constant",
                "meta.template.expression variable.other.readwrite",
                "meta.template.expression variable.other.constant",
                "support.constant.property-value",
            ],
            settings: {
                foreground: "var(--syntax15)",
            },
        }
    ],
};