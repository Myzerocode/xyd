[
  {
    "title": "getBookByTitle",
    "description": "Get a book by title",
    "canonical": "queries/getBookByTitle",
    "category": "graphql",
    "type": "graphql_query",
    "context": {
      "graphqlTypeShort": "query",
      "graphqlName": "getBookByTitle",
      "group": [
        "Queries"
      ],
      "scopes": []
    },
    "examples": {
      "groups": [
        {
          "description": "",
          "examples": [
            {
              "codeblock": {
                "tabs": [
                  {
                    "title": "",
                    "language": "graphql",
                    "code": "{\n  getBookByTitle(title: \"example-title\") {\n    # getBookByTitle fields\n  }\n}"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "definitions": [
      {
        "title": "Arguments",
        "properties": [
          {
            "name": "title",
            "type": "String!",
            "description": "The title of the book",
            "context": {
              "graphqlName": "title",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "/title"
            }
          },
          {
            "name": "info",
            "type": "BookInfoInput",
            "description": "The book info input",
            "context": {
              "graphqlTypeShort": "input",
              "graphqlName": "BookInfoInput",
              "group": [
                "Inputs"
              ],
              "scopes": []
            },
            "properties": [],
            "meta": [],
            "symbolDef": {
              "canonical": "inputs/BookInfoInput"
            }
          }
        ]
      },
      {
        "title": "Returns",
        "properties": [
          {
            "name": "",
            "type": "Book",
            "description": "Get a book by title",
            "context": {
              "graphqlName": "getBookByTitle",
              "graphqlTypeFlat": "Book",
              "graphqlBuiltInType": false
            },
            "properties": [],
            "meta": [],
            "symbolDef": {
              "canonical": "objects/Book"
            }
          }
        ]
      }
    ]
  },
  {
    "title": "addBook",
    "description": "Add a book",
    "canonical": "mutations/addBook",
    "category": "graphql",
    "type": "graphql_mutation",
    "context": {
      "graphqlTypeShort": "mutation",
      "graphqlName": "addBook",
      "group": [
        "Mutations"
      ],
      "scopes": []
    },
    "examples": {
      "groups": [
        {
          "description": "",
          "examples": [
            {
              "codeblock": {
                "tabs": [
                  {
                    "title": "",
                    "language": "graphql",
                    "code": "mutation addBook($input: BookInput!) {\n  addBook(input: $input) {\n    # addBook fields\n  }\n}"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "definitions": [
      {
        "title": "Arguments",
        "properties": [
          {
            "name": "input",
            "type": "BookInput!",
            "description": "",
            "context": {
              "graphqlTypeShort": "input",
              "graphqlName": "BookInput",
              "group": [
                "Inputs"
              ],
              "scopes": []
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "inputs/BookInput"
            }
          }
        ]
      },
      {
        "title": "Returns",
        "properties": [
          {
            "name": "",
            "type": "Book!",
            "description": "Add a book",
            "context": {
              "graphqlName": "addBook",
              "graphqlTypeFlat": "Book",
              "graphqlBuiltInType": false
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "objects/Book"
            }
          }
        ]
      }
    ]
  },
  {
    "title": "addAuthor",
    "description": "Add an author",
    "canonical": "mutations/addAuthor",
    "category": "graphql",
    "type": "graphql_mutation",
    "context": {
      "graphqlTypeShort": "mutation",
      "graphqlName": "addAuthor",
      "group": [
        "Mutations"
      ],
      "scopes": []
    },
    "examples": {
      "groups": [
        {
          "description": "",
          "examples": [
            {
              "codeblock": {
                "tabs": [
                  {
                    "title": "",
                    "language": "graphql",
                    "code": "mutation addAuthor($name: String!) {\n  addAuthor(name: $name) {\n    # addAuthor fields\n  }\n}"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "definitions": [
      {
        "title": "Arguments",
        "properties": [
          {
            "name": "name",
            "type": "String!",
            "description": "",
            "context": {
              "graphqlName": "name",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "/name"
            }
          }
        ]
      },
      {
        "title": "Returns",
        "properties": [
          {
            "name": "",
            "type": "Author!",
            "description": "Add an author",
            "context": {
              "graphqlName": "addAuthor",
              "graphqlTypeFlat": "Author",
              "graphqlBuiltInType": false
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "objects/Author"
            }
          }
        ]
      }
    ]
  },
  {
    "title": "Book",
    "description": "A book type",
    "canonical": "objects/Book",
    "category": "graphql",
    "type": "graphql_object",
    "context": {
      "graphqlTypeShort": "object",
      "graphqlName": "Book",
      "group": [
        "Objects"
      ],
      "scopes": []
    },
    "examples": {
      "groups": []
    },
    "definitions": [
      {
        "title": "Arguments",
        "properties": [],
        "variants": [],
        "meta": [
          {
            "name": "type",
            "value": "arguments"
          }
        ]
      },
      {
        "title": "Fields",
        "properties": [
          {
            "name": "title",
            "type": "String!",
            "description": "The title of the book",
            "context": {
              "graphqlName": "title",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "/title"
            }
          },
          {
            "name": "author_name",
            "type": "String!",
            "description": "The author of the book",
            "context": {
              "graphqlName": "author_name",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "/author_name"
            }
          },
          {
            "name": "info",
            "type": "BookInfo!",
            "description": "The nested book information",
            "context": {
              "graphqlName": "info",
              "graphqlTypeFlat": "BookInfo",
              "graphqlBuiltInType": false
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "objects/BookInfo"
            }
          }
        ],
        "meta": [
          {
            "name": "type",
            "value": "fields"
          }
        ]
      }
    ]
  },
  {
    "title": "BookInfo",
    "description": "A nested book information type",
    "canonical": "objects/BookInfo",
    "category": "graphql",
    "type": "graphql_object",
    "context": {
      "graphqlTypeShort": "object",
      "graphqlName": "BookInfo",
      "group": [
        "Objects"
      ],
      "scopes": []
    },
    "examples": {
      "groups": []
    },
    "definitions": [
      {
        "title": "Arguments",
        "properties": [],
        "variants": [],
        "meta": [
          {
            "name": "type",
            "value": "arguments"
          }
        ]
      },
      {
        "title": "Fields",
        "properties": [
          {
            "name": "date",
            "type": "String!",
            "description": "The date of the book",
            "context": {
              "graphqlName": "date",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "/date"
            }
          }
        ],
        "meta": [
          {
            "name": "type",
            "value": "fields"
          }
        ]
      }
    ]
  },
  {
    "title": "Author",
    "description": "An author type",
    "canonical": "objects/Author",
    "category": "graphql",
    "type": "graphql_object",
    "context": {
      "graphqlTypeShort": "object",
      "graphqlName": "Author",
      "group": [
        "Objects"
      ],
      "scopes": []
    },
    "examples": {
      "groups": []
    },
    "definitions": [
      {
        "title": "Arguments",
        "properties": [],
        "variants": [],
        "meta": [
          {
            "name": "type",
            "value": "arguments"
          }
        ]
      },
      {
        "title": "Fields",
        "properties": [
          {
            "name": "name",
            "type": "String!",
            "description": "The name of the author",
            "context": {
              "graphqlName": "name",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "/name"
            }
          },
          {
            "name": "books",
            "type": "[String]",
            "description": "The books of the author",
            "context": {
              "graphqlName": "books",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [],
            "symbolDef": {
              "canonical": "/books"
            }
          }
        ],
        "meta": [
          {
            "name": "type",
            "value": "fields"
          }
        ]
      }
    ]
  },
  {
    "title": "BookInput",
    "description": "The input object for the getBook query",
    "canonical": "inputs/BookInput",
    "category": "graphql",
    "type": "graphql_input",
    "context": {
      "graphqlTypeShort": "input",
      "graphqlName": "BookInput",
      "group": [
        "Inputs"
      ],
      "scopes": []
    },
    "examples": {
      "groups": []
    },
    "definitions": [
      {
        "title": "Fields",
        "properties": [
          {
            "name": "title",
            "type": "String!",
            "description": "The title of the book",
            "context": {
              "graphqlName": "title",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "/title"
            }
          },
          {
            "name": "info",
            "type": "BookInfoInput!",
            "description": "The author of the book",
            "context": {
              "graphqlName": "info",
              "graphqlTypeFlat": "BookInfoInput",
              "graphqlBuiltInType": false
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "inputs/BookInfoInput"
            }
          }
        ]
      }
    ]
  },
  {
    "title": "BookInfoInput",
    "description": "A nested book information input",
    "canonical": "inputs/BookInfoInput",
    "category": "graphql",
    "type": "graphql_input",
    "context": {
      "graphqlTypeShort": "input",
      "graphqlName": "BookInfoInput",
      "group": [
        "Inputs"
      ],
      "scopes": []
    },
    "examples": {
      "groups": []
    },
    "definitions": [
      {
        "title": "Fields",
        "properties": [
          {
            "name": "date",
            "type": "String!",
            "description": "The date of the book",
            "context": {
              "graphqlName": "date",
              "graphqlTypeFlat": "String",
              "graphqlBuiltInType": true
            },
            "properties": [],
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ],
            "symbolDef": {
              "canonical": "/date"
            }
          }
        ]
      }
    ]
  }
]