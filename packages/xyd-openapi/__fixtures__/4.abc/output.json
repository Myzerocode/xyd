[
  {
    "title": "admin_apps_approve",
    "canonical": "/apps/create",
    "description": "Approve an app for installation on a workspace.",
    "type": "rest_post",
    "category": "rest",
    "context": {
      "method": "post",
      "path": "/admin.apps.approve",
      "fullPath": "https:/slack.com/api/admin.apps.approve",
      "group": [
        "API & Reference",
        "Endpoints",
        "Apps"
      ],
      "scopes": [
        "admin.apps:write"
      ]
    },
    "examples": {
      "groups": [
        {
          "description": "Example request",
          "examples": [
            {
              "codeblock": {
                "tabs": [
                  {
                    "title": "shell",
                    "language": "shell",
                    "code": "curl --request POST \\\n     --url https://slack.com/api/admin.apps.approve"
                  },
                  {
                    "title": "javascript",
                    "language": "javascript",
                    "code": "const options = {method: 'POST'};\n\nfetch('https://slack.com/api/admin.apps.approve', options)\n  .then(res => res.json())\n  .then(res => console.log(res))\n  .catch(err => console.error(err));"
                  },
                  {
                    "title": "python",
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://slack.com/api/admin.apps.approve\"\n\nresponse = requests.post(url)\n\nprint(response.text)"
                  },
                  {
                    "title": "go",
                    "language": "go",
                    "code": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io\"\n)\n\nfunc main() {\n\n\turl := \"https://slack.com/api/admin.apps.approve\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := io.ReadAll(res.Body)\n\n\tfmt.Println(string(body))\n\n}"
                  }
                ]
              }
            }
          ]
        },
        {
          "description": "Example response",
          "examples": [
            {
              "codeblock": {
                "title": "200",
                "tabs": [
                  {
                    "title": "application/json",
                    "language": "json",
                    "code": "{\n  \"ok\": true\n}"
                  }
                ]
              }
            },
            {
              "codeblock": {
                "title": "default",
                "tabs": [
                  {
                    "title": "application/json",
                    "language": "json",
                    "code": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "definitions": [
      {
        "title": "Headers",
        "properties": [
          {
            "name": "token",
            "type": "string",
            "description": "Authentication token. Requires scope: `admin.apps:write`",
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ]
          }
        ]
      },
      {
        "title": "Request body",
        "variants": [
          {
            "title": "application/x-www-form-urlencoded",
            "description": "",
            "properties": [
              {
                "name": "app_id",
                "type": "string",
                "description": "The id of the app to approve.",
                "meta": []
              },
              {
                "name": "request_id",
                "type": "string",
                "description": "The id of the request to approve.",
                "meta": []
              },
              {
                "name": "team_id",
                "type": "string",
                "description": "",
                "meta": []
              }
            ],
            "meta": [
              {
                "name": "contentType",
                "value": "application/x-www-form-urlencoded"
              }
            ]
          }
        ],
        "properties": [],
        "meta": []
      },
      {
        "title": "Response",
        "variants": [
          {
            "title": "200",
            "description": "Typical success response",
            "properties": [
              {
                "name": "ok",
                "type": "$$enum",
                "description": "",
                "meta": [
                  {
                    "name": "required",
                    "value": "true"
                  },
                  {
                    "name": "enum-type",
                    "value": "boolean"
                  }
                ],
                "properties": [
                  {
                    "name": "true",
                    "type": "boolean",
                    "description": "",
                    "meta": []
                  }
                ]
              }
            ],
            "meta": [
              {
                "name": "status",
                "value": "200"
              },
              {
                "name": "contentType",
                "value": "application/json"
              },
              {
                "name": "definitionDescription",
                "value": ""
              }
            ]
          },
          {
            "title": "default",
            "description": "Typical error response",
            "properties": [
              {
                "name": "ok",
                "type": "$$enum",
                "description": "",
                "meta": [
                  {
                    "name": "required",
                    "value": "true"
                  },
                  {
                    "name": "enum-type",
                    "value": "boolean"
                  }
                ],
                "properties": [
                  {
                    "name": "false",
                    "type": "boolean",
                    "description": "",
                    "meta": []
                  }
                ]
              }
            ],
            "meta": [
              {
                "name": "status",
                "value": "default"
              },
              {
                "name": "contentType",
                "value": "application/json"
              },
              {
                "name": "definitionDescription",
                "value": ""
              }
            ]
          }
        ],
        "properties": []
      }
    ]
  },
  {
    "title": "admin_apps_approved_list",
    "canonical": "/apps/approved-list",
    "description": "List approved apps for an org or workspace.",
    "type": "rest_get",
    "category": "rest",
    "context": {
      "method": "get",
      "path": "/admin.apps.approved.list",
      "fullPath": "https:/slack.com/api/admin.apps.approved.list",
      "group": [
        "API & Reference",
        "Endpoints",
        "Apps"
      ],
      "scopes": [
        "admin.apps:read"
      ]
    },
    "examples": {
      "groups": [
        {
          "description": "Example request",
          "examples": [
            {
              "codeblock": {
                "tabs": [
                  {
                    "title": "shell",
                    "language": "shell",
                    "code": "curl --request GET \\\n     --url https://slack.com/api/admin.apps.approved.list"
                  },
                  {
                    "title": "javascript",
                    "language": "javascript",
                    "code": "const options = {method: 'GET'};\n\nfetch('https://slack.com/api/admin.apps.approved.list', options)\n  .then(res => res.json())\n  .then(res => console.log(res))\n  .catch(err => console.error(err));"
                  },
                  {
                    "title": "python",
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://slack.com/api/admin.apps.approved.list\"\n\nresponse = requests.get(url)\n\nprint(response.text)"
                  },
                  {
                    "title": "go",
                    "language": "go",
                    "code": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io\"\n)\n\nfunc main() {\n\n\turl := \"https://slack.com/api/admin.apps.approved.list\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := io.ReadAll(res.Body)\n\n\tfmt.Println(string(body))\n\n}"
                  }
                ]
              }
            }
          ]
        },
        {
          "description": "Example response",
          "examples": [
            {
              "codeblock": {
                "title": "200",
                "tabs": [
                  {
                    "title": "application/json",
                    "language": "json",
                    "code": "{\n  \"approved_apps\": [\n    {\n      \"app\": {\n        \"additional_info\": \"\",\n        \"app_directory_url\": \"https://myteam.enterprise.slack.com/apps/A0W7UKG8E-my-test-app\",\n        \"app_homepage_url\": \"https://www.slack.com\",\n        \"description\": \"test app\",\n        \"help_url\": \"https://www.slack.com\",\n        \"icons\": {\n          \"image_1024\": \"https://3026743124446w96_2bd4ea1ad1f89a23c242_1024.png\",\n          \"image_128\": \"https://30267341249446w6_2bd4ea1ad1f89a23c242_128.png\",\n          \"image_192\": \"https://30267431249446w6_2bd4ea1ad1f89a23c242_192.png\",\n          \"image_32\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_32.png\",\n          \"image_36\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_36.png\",\n          \"image_48\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_48.png\",\n          \"image_512\": \"https://30267431249446w6_2bd4ea1ad1f89a23c242_512.png\",\n          \"image_64\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_64.png\",\n          \"image_72\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_72.png\",\n          \"image_96\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_96.png\",\n          \"image_original\": \"https://302674446w12496_2bd4ea1ad1f89a23c242_original.png\"\n        },\n        \"id\": \"A0W7UKG8E\",\n        \"is_app_directory_approved\": false,\n        \"is_internal\": false,\n        \"name\": \"My Test App\",\n        \"privacy_policy_url\": \"https://www.slack.com\"\n      },\n      \"date_updated\": 1574296707,\n      \"last_resolved_by\": {\n        \"actor_id\": \"W0G82F4FD\",\n        \"actor_type\": \"user\"\n      },\n      \"scopes\": [\n        {\n          \"description\": \"Add the ability for people to direct message or mention @my_test_app\",\n          \"is_sensitive\": true,\n          \"name\": \"bot\",\n          \"token_type\": \"bot\"\n        }\n      ]\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}"
                  }
                ]
              }
            },
            {
              "codeblock": {
                "title": "default",
                "tabs": [
                  {
                    "title": "application/json",
                    "language": "json",
                    "code": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "definitions": [
      {
        "title": "Query parameters",
        "properties": [
          {
            "name": "token",
            "type": "string",
            "description": "Authentication token. Requires scope: `admin.apps:read`",
            "meta": [
              {
                "name": "required",
                "value": "true"
              }
            ]
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive.",
            "meta": []
          },
          {
            "name": "cursor",
            "type": "string",
            "description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page",
            "meta": []
          },
          {
            "name": "team_id",
            "type": "string",
            "description": "",
            "meta": []
          },
          {
            "name": "enterprise_id",
            "type": "string",
            "description": "",
            "meta": []
          }
        ]
      },
      {
        "title": "Response",
        "variants": [
          {
            "title": "200",
            "description": "Typical success response",
            "properties": [
              {
                "name": "ok",
                "type": "$$enum",
                "description": "",
                "meta": [
                  {
                    "name": "required",
                    "value": "true"
                  },
                  {
                    "name": "enum-type",
                    "value": "boolean"
                  }
                ],
                "properties": [
                  {
                    "name": "true",
                    "type": "boolean",
                    "description": "",
                    "meta": []
                  }
                ]
              }
            ],
            "meta": [
              {
                "name": "status",
                "value": "200"
              },
              {
                "name": "contentType",
                "value": "application/json"
              },
              {
                "name": "definitionDescription",
                "value": ""
              }
            ]
          },
          {
            "title": "default",
            "description": "Typical error response",
            "properties": [
              {
                "name": "ok",
                "type": "$$enum",
                "description": "",
                "meta": [
                  {
                    "name": "required",
                    "value": "true"
                  },
                  {
                    "name": "enum-type",
                    "value": "boolean"
                  }
                ],
                "properties": [
                  {
                    "name": "false",
                    "type": "boolean",
                    "description": "",
                    "meta": []
                  }
                ]
              }
            ],
            "meta": [
              {
                "name": "status",
                "value": "default"
              },
              {
                "name": "contentType",
                "value": "application/json"
              },
              {
                "name": "definitionDescription",
                "value": ""
              }
            ]
          }
        ],
        "properties": []
      }
    ]
  }
]